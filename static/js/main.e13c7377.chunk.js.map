{"version":3,"sources":["components/layout/Header.js","components/layout/Footer.js","components/pages/about.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/contacts/addContact.js","components/pages/notFound.js","components/contacts/editContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","Footer","class","about","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactInfo","deleteContact","a","delete","name","email","phone","onClick","bind","Contacts","Fragment","key","addContact","errors","onChange","e","target","onSubmit","preventDefault","newContact","post","history","push","htmlFor","classnames","placeholder","notFound","editContact","updContact","match","params","put","console","log","App","exact","path","component","AddContact","EditContact","About","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e13c7377.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = props => {\r\n    const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                Add Contact\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding:'Example App'\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n\r\nconst Footer = () => {\r\n    \r\n    return (\r\n        <nav className=\"navbar fixed-bottom navbar-dark bg-dark text-center\">\r\n            <div class=\"mx-auto order-0\">\r\n                <a class=\"navbar-brand\" href=\"https://www.linkedin.com/in/yogeshpatel951/\">Developed By: <u>Yogesh Patel</u></a>\r\n        \r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\nimport Footer from '../layout/Footer';\r\nexport default function about() {\r\n    return (\r\n        <div>\r\n        <div className=\"jumbotron text-center \">\r\n            <h1 className=\"display-4\"><b>ABOUT CONTACT MANAGER</b></h1>\r\n            <p className=\"lead\"> Simple App to Manage Contacts</p>\r\n            <p className=\"text-secondary\"> Version 1.0.0</p>\r\n        </div>\r\n\r\n        <Footer></Footer>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React , {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action)=>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.filter(contact=>contact.id!==action.payload)\r\n            };\r\n        \r\n            case 'ADD_CONTACT':\r\n                return{\r\n                    ...state,\r\n                    contacts: [action.payload,...state.contacts]\r\n                };\r\n\r\n                case 'UPDATE_CONTACT':\r\n                    return{\r\n                        ...state,\r\n                        contacts: state.contacts.map(contact => \r\n                                contact.id===action.payload.id ? (contact = action.payload ): contact\r\n                            )\r\n                    };\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component{\r\n    state={\r\n        contacts:[\r\n        ],\r\n        dispatch: action =>{\r\n            this.setState(state => reducer(state,action))\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n            const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n            this.setState({contacts:res.data});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nclass Contact extends Component {\r\n    state={\r\n        showContactInfo:false\r\n    };\r\n\r\n\r\n    deleteContact = async (id,dispatch)=> {\r\n        try{\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({type:'DELETE_CONTACT', payload:id});\r\n        }\r\n        catch(e){\r\n            dispatch({type:'DELETE_CONTACT', payload:id});\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        \r\n        const {id,name, email, phone}=this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value=>{\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card card-body mb-3\">\r\n                <h4>{name} \r\n                <small onClick={\r\n                    () => this.setState({\r\n                        showContactInfo:!this.state.showContactInfo\r\n                    })\r\n                    } className=\"border icon icon-normal \">Expand</small>\r\n                    \r\n                    \r\n                    \r\n                    <small onClick={this.deleteContact.bind(this,id,dispatch)} className=\"border icon-del  icon \">Delete</small>\r\n                    <Link to={`contact/edit/${id}`} className=\"border icon-edit  icon \">Edit</Link>\r\n                </h4>\r\n                {showContactInfo ? (<ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                    </ul>) : null }\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>   \r\n        );\r\n    };\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\nclass Contacts extends Component {\r\n    \r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts} = value;\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-3\">\r\n                                <span className=\"text-success\">Contact</span><span className=\"text-danger\"> List</span>\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                ></Contact>\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\n\r\nimport classnames from 'classnames';\r\nimport axios from 'axios';\r\nclass addContact extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    };\r\n    \r\n\r\n    onChange = (e) => this.setState({[e.target.name] : e.target.value });\r\n\r\n    onSubmit = async (dispatch,e)=>{\r\n        e.preventDefault();\r\n        const {name,email,phone}=this.state;\r\n\r\n        if(name===''){\r\n            this.setState({errors:{name:'Name is Required'}})\r\n            return;\r\n        }\r\n        if(email===''){\r\n            this.setState({errors:{email:'EMail is Required'}})\r\n            return;\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors:{phone:'Phone is Required'}})\r\n            return;\r\n        }\r\n\r\n        const newContact={\r\n            \r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n        dispatch({type:'ADD_CONTACT',payload:res.data});\r\n        \r\n        \r\n        \r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        const {name, email, phone,errors} = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value =>{\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-4\">\r\n                <div className=\"card-header\">Add Contact</div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\" className=\"form-control-label\">Name</label>\r\n                            <input className={classnames((\"form-control form-control-lg\"),{\r\n                                \"is-invalid\":this.state.errors.name\r\n                            })} type=\"text\"\r\n                                placeholder=\"Enter Name!\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                            ></input>\r\n                            {errors.name && <div className=\"invalid-feedback\">\r\n                                {errors.name}\r\n                            </div> }\r\n                            \r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\" className=\"form-control-label\">Email</label>\r\n                            <input className={classnames((\"form-control form-control-lg\"),{\r\n                                \"is-invalid\":this.state.errors.email\r\n                            })} type=\"email\"\r\n                                placeholder=\"Enter Email-ID!\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                            ></input>\r\n                            {errors.email && <div className=\"invalid-feedback\">\r\n                                {errors.email}\r\n                            </div> }\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone\" className=\"form-control-label\">Phone</label>\r\n                            <input className={classnames((\"form-control form-control-lg\"),{\r\n                                \"is-invalid\":this.state.errors.phone\r\n                            })}type=\"tel\"\r\n                                placeholder=\"Enter Phone Number!\"\r\n                                name=\"phone\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                            ></input>\r\n                            {errors.phone && <div className=\"invalid-feedback\">\r\n                                {errors.phone}\r\n                            </div> }\r\n                        </div>\r\n\r\n\r\n\r\n                        <input type=\"submit\" value=\"Add to Contact\" className=\"btn btn-block btn-dark\"></input>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default addContact;","import React from 'react'\r\n\r\nexport default function notFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">404 PAGE NOT FOUND</h1>\r\n            <p className=\"lead\">Sorrrt, That Page Not Exists!</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\n\r\nimport classnames from 'classnames';\r\nimport axios from 'axios';\r\nclass editContact extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    };\r\n    \r\n\r\n    async componentDidMount(){\r\n        const {id}=this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone\r\n        })\r\n    }\r\n\r\n\r\n    onChange = (e) => this.setState({[e.target.name] : e.target.value });\r\n\r\n    onSubmit = async (dispatch,e)=>{\r\n        e.preventDefault();\r\n        const {name,email,phone}=this.state;\r\n\r\n        if(name===''){\r\n            this.setState({errors:{name:'Name is Required'}})\r\n            return;\r\n        }\r\n        if(email===''){\r\n            this.setState({errors:{email:'EMail is Required'}})\r\n            return;\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors:{phone:'Phone is Required'}})\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        \r\n\r\n        const {id}=this.props.match.params;\r\n\r\n        const res= await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n        console.log(res)\r\n        dispatch({type:'UPDATE_CONTACT', payload:res.data});\r\n\r\n\r\n\r\n\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        const {name, email, phone,errors} = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value =>{\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-4\">\r\n                <div className=\"card-header\">Edit Contact</div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\" className=\"form-control-label\">Name</label>\r\n                            <input className={classnames((\"form-control form-control-lg\"),{\r\n                                \"is-invalid\":this.state.errors.name\r\n                            })} type=\"text\"\r\n                                placeholder=\"Enter Name!\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                            ></input>\r\n                            {errors.name && <div className=\"invalid-feedback\">\r\n                                {errors.name}\r\n                            </div> }\r\n                            \r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\" className=\"form-control-label\">Email</label>\r\n                            <input className={classnames((\"form-control form-control-lg\"),{\r\n                                \"is-invalid\":this.state.errors.email\r\n                            })} type=\"email\"\r\n                                placeholder=\"Enter Email-ID!\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                            ></input>\r\n                            {errors.email && <div className=\"invalid-feedback\">\r\n                                {errors.email}\r\n                            </div> }\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone\" className=\"form-control-label\">Phone</label>\r\n                            <input className={classnames((\"form-control form-control-lg\"),{\r\n                                \"is-invalid\":this.state.errors.phone\r\n                            })}type=\"tel\"\r\n                                placeholder=\"Enter Phone Number!\"\r\n                                name=\"phone\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                            ></input>\r\n                            {errors.phone && <div className=\"invalid-feedback\">\r\n                                {errors.phone}\r\n                            </div> }\r\n                        </div>\r\n\r\n\r\n\r\n                        <input type=\"submit\" value=\"Edit Contact\" className=\"btn btn-block btn-dark\"></input>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default editContact;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/layout/Header';\nimport About from './components/pages/about';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/addContact';\nimport {Provider} from './context';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport notFound from './components/pages/notFound';\nimport EditContact from './components/contacts/editContact';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n      <div className=\"pb-3\">\n        <Header branding=\"Contact Manager\"></Header>\n        \n        <div className=\"container\">\n          <Switch>\n            <Route exact path='/' component={Contacts} ></Route>\n            <Route exact path='/contact/add' component={AddContact} ></Route>\n            <Route exact path='/contact/edit/:id' component={EditContact} ></Route>\n            <Route exact path='/about' component={About} ></Route>\n            <Route component={notFound}></Route>\n          </Switch>\n\n          \n        </div>\n\n        \n\n      </div>\n      \n      </Router>\n      </Provider>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}